{"version":3,"sources":["components/Options/Options.module.css","components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/Statistics/Notification.jsx","components/Statistics/Statistics.jsx","components/Options/Options.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","Section","title","className","styles","Title","Notification","message","Statistics","good","neutral","bad","total","positive","FeedbackList","Options","onLeaveFeedback","options","countFeedback","Button","map","name","type","FeedbackBtn","onClick","FeedbackItems","Feedback","state","currentState","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","names","Object","keys","FeedbackForm","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,YAAc,+B,yDCA7ED,EAAOC,QAAU,CAAC,aAAe,mC,6LCUlBC,EARC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,OACE,mCACE,oBAAIC,UAAWC,IAAOC,MAAtB,SAA8BH,O,iBCEnBI,EARI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,mCACE,6BAAKA,OC0CEC,EAzCI,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/C,OACE,mCACGD,EACC,qBAAIT,UAAWC,IAAOU,aAAtB,UACE,uCAEE,qCAAQL,QAEV,0CAEE,qCAAQC,QAEV,sCAEE,qCAAQC,QAEV,wCAEE,qCAAQC,QAEV,oDAEE,qCAAQC,EAAR,aAIJ,cAAC,EAAD,CAAcN,QAAS,yB,gBCLhBQ,EAxBC,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1BC,EAAkBF,EAAlBE,cACFC,EAASF,EAAQG,KAAI,SAACC,GAC1B,OACE,wBAEEC,KAAK,SACLD,KAAMA,EACNlB,UAAWC,IAAOmB,YAClBC,QAAS,kBAAMN,EAAcG,IAL/B,SAOGA,GANIA,MAUX,OACE,mCACE,oBAAIlB,UAAWC,IAAOU,aAAtB,SACE,oBAAIX,UAAWC,IAAOqB,cAAtB,SAAsCN,SCbxCO,E,4MACFC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,cAAgB,SAACG,GACf,IAAMO,EAAeP,EACrB,EAAKQ,UAAS,SAACC,GAAD,sBACXF,EAAeE,EAAUF,GAAgB,MAE5C,EAAKG,sB,EAGPA,mBAAqB,WACnB,MAA+B,EAAKJ,MAEpC,OAFA,EAAQlB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBqB,gCAAkC,WAChC,IAAQvB,EAAS,EAAKkB,MAAdlB,KAEFG,GAAQmB,EADd,eAAQA,sBAGR,OADiBE,KAAKC,MAAOzB,EAAOG,EAAS,M,4CAI/C,WACE,IACEM,EAGEiB,KAHFjB,cACAa,EAEEI,KAFFJ,mBACAC,EACEG,KADFH,gCAEF,EAA+BG,KAAKR,MAA5BlB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBK,EAAkB,CAAEE,iBACpBkB,EAAQC,OAAOC,KAAKH,KAAKR,OAC/B,OACE,sBAAKxB,UAAWC,IAAOmC,aAAvB,UACE,cAAC,EAAD,CAASrC,MAAM,0BACf,cAAC,EAAD,CAASe,QAASmB,EAAOpB,gBAAiBA,IAC1C,cAAC,EAAD,CAASd,MAAM,eACf,cAAC,EAAD,CACEO,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOmB,IACPlB,SAAUmB,a,GAhDCQ,aAuDNd,IClDFe,MARf,WACE,OACE,qBAAKtC,UAAU,MAAf,SACG,cAAC,EAAD,OCDPuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3e67c538.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackList\":\"Options_FeedbackList__Vhh3A\",\"FeedbackBtn\":\"Options_FeedbackBtn__38-zO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackList\":\"Statistics_FeedbackList__fF9Tl\"};","import styles from \"./Section.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title }) => {\r\n  return (\r\n    <>\r\n      <h2 className={styles.Title}>{title}</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};","const Notification = ({ message }) => {\r\n    return (\r\n      <>\r\n        <h2>{message}</h2>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default Notification;","import styles from \"./Statistics.module.css\";\r\nimport Notification from \"./Notification\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positive }) => {\r\n  return (\r\n    <>\r\n      {total ? (\r\n        <ul className={styles.FeedbackList}>\r\n          <li>\r\n            Good:\r\n            <span> {good}</span>\r\n          </li>\r\n          <li>\r\n            Neutral:\r\n            <span> {neutral}</span>\r\n          </li>\r\n          <li>\r\n            Bad:\r\n            <span> {bad}</span>\r\n          </li>\r\n          <li>\r\n            Total:\r\n            <span> {total}</span>\r\n          </li>\r\n          <li>\r\n            Positive feedback:\r\n            <span> {positive}%</span>\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message={\"No feedback given\"} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positive: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;","import styles from \"./Options.module.css\";\r\n\r\nconst Options = ({ onLeaveFeedback, options }) => {\r\n  const { countFeedback } = onLeaveFeedback;\r\n  const Button = options.map((name) => {\r\n    return (\r\n      <button\r\n        key={name}\r\n        type=\"button\"\r\n        name={name}\r\n        className={styles.FeedbackBtn}\r\n        onClick={() => countFeedback(name)}\r\n      >\r\n        {name}\r\n      </button>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <ul className={styles.FeedbackList}>\r\n        <li className={styles.FeedbackItems}>{Button}</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Options;","import { Component } from \"react\";\r\nimport styles from \"./Feedback.module.css\";\r\nimport Section from \"../Section/Section\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Options from \"../Options/Options\";\r\n\r\n\r\nclass Feedback extends Component {\r\n    state = {\r\n      good: 0,\r\n      neutral: 0,\r\n      bad: 0,\r\n    };\r\n  \r\n    countFeedback = (name) => {\r\n      const currentState = name;\r\n      this.setState((prevState) => ({\r\n        [currentState]: prevState[currentState] + 1,\r\n      }));\r\n      this.countTotalFeedback();\r\n    };\r\n  \r\n    countTotalFeedback = () => {\r\n      const { good, neutral, bad } = this.state;\r\n      const total = good + neutral + bad;\r\n      return total;\r\n    };\r\n  \r\n    countPositiveFeedbackPercentage = () => {\r\n      const { good } = this.state;\r\n      const { countTotalFeedback } = this;\r\n      const total = countTotalFeedback();\r\n      const positive = Math.round((good / total) * 100);\r\n      return positive;\r\n    };\r\n  \r\n    render() {\r\n      const {\r\n        countFeedback,\r\n        countTotalFeedback,\r\n        countPositiveFeedbackPercentage,\r\n      } = this;\r\n      const { good, neutral, bad } = this.state;\r\n      const onLeaveFeedback = { countFeedback };\r\n      const names = Object.keys(this.state);\r\n      return (\r\n        <div className={styles.FeedbackForm}>\r\n          <Section title=\"Please leave feedback\" />\r\n          <Options options={names} onLeaveFeedback={onLeaveFeedback} />\r\n          <Section title=\"Statistics\" />\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positive={countPositiveFeedbackPercentage()}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Feedback;","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Feedback from './components/Feedback/Feedback.jsx';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n       <Feedback />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}